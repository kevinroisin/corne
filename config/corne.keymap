/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        line_before_cursor: line_before_cursor {
            compatible = "zmk,behavior-macro";
            label = "LINE_BEFORE_CURSOR";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LGUI)>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LS(LGUI)>;
        };
        line_after_cursor: line_after_cursor {
            compatible = "zmk,behavior-macro";
            label = "LINE_AFTER_CURSOR";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LGUI)>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LS(LGUI)>;
        };
        word_before_cursor: word_before_cursor {
            compatible = "zmk,behavior-macro";
            label = "WORD_BEFORE_CURSOR";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LEFT_ALT)>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LS(LEFT_ALT)>;
        };
        word_after_cursor: word_after_cursor {
            compatible = "zmk,behavior-macro";
            label = "WORD_AFTER_CURSOR";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LEFT_ALT)>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LS(LEFT_ALT)>;
        };
        close_window: close_window {
            compatible = "zmk,behavior-macro";
            label = "CLOSE_WINDOW";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LGUI>;
        };
        quit: quit {
            compatible = "zmk,behavior-macro";
            label = "QUIT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LGUI>;
        };
        select_all: select_all {
            compatible = "zmk,behavior-macro";
            label = "SELECT_ALL";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LGUI>;
        };
        change_tab_forward: change_tab_forward {
            compatible = "zmk,behavior-macro";
            label = "CHANGE_TAB_FORWARD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };
        change_tab_backward: change_tab_backward {
            compatible = "zmk,behavior-macro";
            label = "CHANGE_TAB_BACKWARD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LEFT_CONTROL)>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LS(LEFT_CONTROL)>;
        };
    };

    behaviors {
        new_tab_b: new_tab_b {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_TAB_B";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp T>,
                <&new_tab>;
        };
    };

    combos {
        compatible = "zmk,combos";

        next_tab {
            bindings = <&change_tab_forward>;
            key-positions = <1 2>;
        };

        prev_tab {
            bindings = <&change_tab_backward>;
            key-positions = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W         &kp E  &kp R      &kp T      &kp Y  &kp U         &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp S         &kp D  &kp F      &kp G      &kp H  &kp J         &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X         &kp C  &kp V      &kp B      &kp N  &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5      &kp N6     &kp N7  &kp N8    &kp N9  &kp N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp RIGHT  &kp UP  &kp DOWN  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans      &trans     &trans  &trans    &trans  &trans  &trans
                                              &trans        &trans        &trans      &trans     &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp EXCL         &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans
&trans        &quit  &close_window  &new_tab    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &select_all           &cut     &copy    &paste     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                      &trans    &trans     &trans       &trans     &trans           &trans
            >;
        };
    };
};
